---
- name: Get the datacenter name
  ovirt.ovirt.ovirt_datacenter_info:
    auth: "{{ ovirt_auth }}"
    pattern: "Clusters.name = {{ providers.ovirt.cluster }}"
  register: datacenter_info

- name: Get storage information
  ovirt.ovirt.ovirt_storage_domain_info:
    auth: "{{ ovirt_auth }}"
    pattern: "datacenter={{ datacenter_info.ovirt_datacenters[0].name }}"
  register: storage_info
  when:
    - template_disk_storage is undefined

- name: Get data domain
  ansible.builtin.set_fact:
    disk_storage_domain: "{{ storage_info.ovirt_storage_domains | json_query(the_query) | list | first | default({}) }}"
  when:
    - template_disk_storage is undefined
  vars:
    the_query: "[?type=='data']"

- name: Get ISO domain (deprecated as of oVirt/RHV 4.3)
  ansible.builtin.set_fact:
    iso_domain: "{{ storage_info.ovirt_storage_domains | json_query(the_query) | list | first | default({}) }}"
  vars:
    the_query: "[?type=='iso']"

- name: Check if template already exists
  ovirt.ovirt.ovirt_template_info:
    auth: "{{ ovirt_auth }}"
    pattern: "name={{ template.name }} and datacenter={{ datacenter_info.ovirt_datacenters[0].name }}"
  register: template_info

- name: Handle existing template
  when:
    - template_info.ovirt_templates is defined
    - template_info.ovirt_templates | length > 0

  block:
    - name: Set template_found to true
      ansible.builtin.set_fact:
        template_found: true

    - name: Fail with message
      ansible.builtin.fail:
        msg: "Existing template found on ovirt/rhv: {{ template.name }}"
      when: not template_force | bool
- name: Check ISO file on data domain
  ovirt.ovirt.ovirt_disk_info:
    auth: "{{ ovirt_auth }}"
    pattern: "name={{ iso_file_name }}"
  register: ovirt_disk_main_iso
  when: iso_file_name is defined

- name: Set file id of the ISO file
  ansible.builtin.set_fact:
    iso_file_id: "{{ ovirt_disk_main_iso.ovirt_disks[0].id }}"
  when:
    - ovirt_disk_main_iso.ovirt_disks | length > 0
    - ovirt_disk_main_iso.ovirt_disks[0].id is defined
    - ovirt_disk_main_iso.ovirt_disks[0].content_type == 'iso'

- name: Fail with message if ISO not found
  ansible.builtin.fail:
    msg: "iso file ({{ iso_file_name }}) could not be found on the data domain and iso domain does not exists"
  when:
    - iso_file_id is undefined
    - iso_domain is undefined or iso_domain | length == 0
